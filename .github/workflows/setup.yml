name: Workflow test

on:
  workflow_dispatch
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} 
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    #Checkout the codebase
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Java JDK
      uses: actions/setup-java@v4.2.2
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      env:
        cache-name: cache-maven
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
    - name: Build Java application with Maven
      run: mvn clean install -DskipTests
      
    - name: Build Docker Image
      run: |
        docker build -t 7990509979/demo-project .
        docker image ls
      
    - name: Push Docker image to Artifactory 
      run: |
        docker login --username ${{ env.DOCKER_USERNAME }} --password ${{ env.DOCKER_PASSWORD }}
        docker push 7990509979/demo-project
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
        
    - name: Log in Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to ECR
      env:
        ECR_REGISTRY: 975050202362.dkr.ecr.ap-south-1.amazonaws.com
        ECR_REPOSITORY: hello-world-mine
        IMAGE_TAG: ${{ github.sha }}
      run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Trigger AWS CodePipeline
      run: |
        aws codepipeline start-pipeline-execution --name <pipeline_name>
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-south-1
